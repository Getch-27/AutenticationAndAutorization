name: Deploy

on:
  push:
    branches: 
      - "master"

jobs:
  check-backend-changes:
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.check_backend.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for backend changes
        id: check_backend
        run: |
          # Ensure we have access to previous commits
          git fetch --depth=2
          
          # Check if any backend files have changed
          if git diff --name-only HEAD~1 HEAD | grep -q '^Server/'; then
            echo "changed=true" >> $GITHUB_ENV
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_ENV
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  check-frontend-changes:
    runs-on: ubuntu-latest
    needs: check-backend-changes
    outputs:
      frontend_changed: ${{ steps.check_frontend.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for frontend changes
        id: check_frontend
        run: |
          # Ensure we have access to previous commits
          git fetch --depth=2

          # Check if any frontend files have changed
          if git diff --name-only HEAD~1 HEAD | grep -q '^Client/'; then
            echo "changed=true" >> $GITHUB_ENV
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_ENV
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  deploy-backend:
    runs-on: ubuntu-latest
    needs: check-backend-changes
    if: needs.check-backend-changes.outputs.backend_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Backend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.SERVER_VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          cd Server
          npx vercel --prod --token $VERCEL_TOKEN --project-id $VERCEL_PROJECT_ID --org-id $VERCEL_ORG_ID

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: check-frontend-changes
    if: needs.check-frontend-changes.outputs.frontend_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy Frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.REACT_VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: 
          npx vercel --prod --token $VERCEL_TOKEN